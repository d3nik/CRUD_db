@page "/customers/add_or_update_customer";
@rendermode InteractiveServer
@using CRUD_db.Interfaces;
@using CRUD_db.Models;
@using Microsoft.AspNetCore.WebUtilities;
@inject ICustomerService customerService;
@inject NavigationManager navigationManager;

<style>
    .form-control{
        width: 40%;
    }
</style>
<h3>AddCustomerPage</h3>

<form @onsubmit="OnFormSubmit">
    <div class="col md-4">
        <label class="col-form-label-lg">Full Name</label>
        <input type="text" class="form-control" @bind="@customer.FullName" placeholder="Enter full name">
    </div>

    <div class="md-4">
        <label class="col-form-label-lg">Phone</label>
        <input type="text" class="form-control" @bind="@customer.Phone" placeholder="Enter phone">
    </div>

    <div class="md-4">
        <label class="col-form-label-lg">Email</label>
        <input type="text" class="form-control" @bind="@customer.Email" placeholder="Example: post@gmail.com">
    </div>

    <div class="md-4">
        <label class="col-form-label-lg">City</label>
        <input type="text" class="form-control" @bind="@customer.City" placeholder="Enter City">
    </div>

    <div class="mb-3">
        <label class="col-form-label-lg">ZipCode</label>
        <input type="text" class="form-control" id="customerZipCode" @bind="@customer.ZipCode" placeholder="Enter ZipCode">
    </div>

    <div class="col md-4">
        <button type="submit" class="btn btn-primary">Submit</button>
        <NavLink href="/customers"><button type="button" class="btn btn-danger">Cancel</button></NavLink>
    </div>
</form>

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public int CustomerId { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string FullName { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? Phone { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? Email { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? City { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? ZipCode { get; set; }

    private Customer customer;

    protected override void OnInitialized()
    {
        var uri = navigationManager.ToAbsoluteUri(navigationManager.Uri);

        customer = new Customer()
            {
                CustomerId = this.CustomerId,
                FullName = this.FullName,
                Phone = this.Phone,
                Email = this.Email,
                City = this.City,
                ZipCode = this.ZipCode
            }; 

    }

    public async Task OnFormSubmit()
    {
        if (customer.CustomerId == 0)
        {
            await customerService.AddCustomer(customer);
        }
        else
        {
            await customerService.UpdateCustomer(customer);
        }

        navigationManager.NavigateTo("/customers");
    }
}
